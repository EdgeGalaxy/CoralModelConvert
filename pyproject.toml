[tool.poetry]
name = "coralmodelconvert"
version = "0.1.0"
description = ""
authors = ["zhaokefei <546109656@qq.com>"]
readme = "README.md"
package-mode = false

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.104.1"
uvicorn = {extras = ["standard"], version = "^0.24.0"}
pydantic = "^2.5.0"
loguru = "^0.7.2"
python-multipart = "^0.0.6"
aiofiles = "^23.2.0"
rknn-toolkit2 = "^2.3.2"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
pytest-cov = "^4.1.0"
pytest-asyncio = "^0.21.1"
mypy = "^1.7.1"
ruff = "^0.1.6"
black = "^23.11.0"
safety = "^2.3.4"
bandit = "^1.7.5"
httpx = "^0.25.2"

[tool.ruff]
target-version = "py311"
line-length = 88
select = ["E", "F", "W", "I", "N", "B", "A", "C4", "ISC", "T20", "PYI", "PT", "RET", "SIM", "TID", "ARG", "PLE", "PLR", "PLW", "RUF"]
ignore = ["E501", "B008", "RUF012"]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*.py" = ["ARG", "PLR2004"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true

[tool.black]
target-version = ["py311"]
line-length = 88
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short --strict-markers"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

[tool.coverage.run]
source = ["coral_model_convert"]
omit = ["tests/*", "*/tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
